set(CURLPP_INCLUDE_DIR ${CMAKE_SOURCE_DIR}/vcpkg_installed/${TRIPLET}/include)

find_library(
  CURLPP_LIBRARIES_RELEASE curlpp
  PATHS ${CMAKE_SOURCE_DIR}/vcpkg_installed/${TRIPLET}/lib
  PATH_SUFFIXES "lib" REQUIRED
  NO_DEFAULT_PATH)

find_library(
  CURLPP_LIBRARIES_DEBUG curlpp
  PATHS ${CMAKE_SOURCE_DIR}/vcpkg_installed/${TRIPLET}/lib
  PATH_SUFFIXES "debug" REQUIRED
  NO_DEFAULT_PATH)

mark_as_advanced(CURLPP_INCLUDE_DIR CURLPP_LIBRARIES_RELEASE CURLPP_LIBRARIES_DEBUG)

include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(CURLPP REQUIRED_VARS CURLPP_INCLUDE_DIR CURLPP_LIBRARIES_RELEASE
                                                       CURLPP_LIBRARIES_DEBUG)

if(CURLPP_FOUND AND NOT TARGET Curlpp::curlpp)
  add_library(Curlpp::curlpp UNKNOWN IMPORTED)
  set_target_properties(
    Curlpp::curlpp
    PROPERTIES IMPORTED_LINK_INTERFACE_LANGUAGES CXX
               IMPORTED_LOCATION ${CURLPP_LIBRARIES_RELEASE}
               IMPORTED_LOCATION_RELEASE ${CURLPP_LIBRARIES_RELEASE}
               IMPORTED_LOCATION_DEBUG ${CURLPP_LIBRARIES_DEBUG}
               IMPORTED_LOCATION_RELWITHDEBINFO ${CURLPP_LIBRARIES_RELEASE}
               IMPORTED_LOCATION_MINSIZEREL ${CURLPP_LIBRARIES_RELEASE}
               INTERFACE_INCLUDE_DIRECTORIES ${CURLPP_INCLUDE_DIR})
endif()
